{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isRegExp from '@stdlib/assert-is-regexp' ;\nimport reRegExp from '@stdlib/regexp-regexp' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a regular expression.\n*\n* @param {RegExp} regex - regular expression to serialize\n* @throws {TypeError} first argument must be a regular expression\n* @returns {Object} JSON representation\n*\n* @example\n* var json = toJSON( /ab+c/ );\n* // returns {...}\n*/\nfunction toJSON( regex ) {\n\tvar parts;\n\tvar re;\n\tif ( !isRegExp( regex ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression. Value: `%s`.', regex ) );\n\t}\n\tre = reRegExp();\n\tparts = re.exec( regex.toString() );\n\treturn {\n\t\t'type': 'RegExp',\n\t\t'pattern': parts[ 1 ],\n\t\t'flags': parts[ 2 ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n"],"names":["toJSON","regex","parts","isRegExp","TypeError","format","type","pattern","reRegExp","exec","toString","flags"],"mappings":";;6QAwCA,SAASA,EAAQC,GAChB,IAAIC,EAEJ,IAAMC,EAAUF,GACf,MAAM,IAAIG,UAAWC,EAAQ,oEAAqEJ,IAInG,MAAO,CACNK,KAAQ,SACRC,SAHDL,EADKM,IACMC,KAAMR,EAAMS,aAGJ,GAClBC,MAAST,EAAO"}