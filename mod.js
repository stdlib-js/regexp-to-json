// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function t(){return e&&"symbol"==typeof Symbol.toStringTag}var r=Object.prototype.toString;var o=Object.prototype.hasOwnProperty;var n,a="function"==typeof Symbol?Symbol.toStringTag:"";n=t()?function(e){var t,n,l,i,c;if(null==e)return r.call(e);n=e[a],c=a,t=null!=(i=e)&&o.call(i,c);try{e[a]=void 0}catch(t){return r.call(e)}return l=r.call(e),t?e[a]=n:delete e[a],l}:function(e){return r.call(e)};var l=n,i=RegExp.prototype.exec;var c=t();function u(e){return"object"==typeof e&&(e instanceof RegExp||(c?function(e){try{return i.call(e),!0}catch(e){return!1}}(e):"[object RegExp]"===l(e)))}var p="function"==typeof Object.defineProperty?Object.defineProperty:null;var f,y=Object.defineProperty,b=Object.prototype,_=b.toString,g=b.__defineGetter__,s=b.__defineSetter__,v=b.__lookupGetter__,m=b.__lookupSetter__;function d(){return/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/}function j(e){var t;if(!u(e))throw new TypeError(function(){var e,t=arguments,r="https://stdlib.io/e/"+t[0]+"?";for(e=1;e<t.length;e++)r+="&arg[]="+encodeURIComponent(t[e]);return r}("invalid argument. Must provide a regular expression. Value: `%s`.",e));return{type:"RegExp",pattern:(t=/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/.exec(e.toString()))[1],flags:t[2]}}f=function(){try{return p({},"x",{}),!0}catch(e){return!1}}()?y:function(e,t,r){var o,n,a,l;if("object"!=typeof e||null===e||"[object Array]"===_.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===_.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((n="value"in r)&&(v.call(e,t)||m.call(e,t)?(o=e.__proto__,e.__proto__=b,delete e[t],e[t]=r.value,e.__proto__=o):e[t]=r.value),a="get"in r,l="set"in r,n&&(a||l))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return a&&g&&g.call(e,t,r.get),l&&s&&s.call(e,t,r.set),e},f(d,"REGEXP",{configurable:!1,enumerable:!1,writable:!1,value:/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/});export{j as default};
//# sourceMappingURL=mod.js.map
